products:
  distgo:
    build:
      output-dir: ./apps/distgo/build
      main-pkg: ./apps/distgo/main/distgo
      environment:
        CGO_ENABLED: "0"
      version-var: github.com/palantir/godel/cmd/godel.Version
    dist:
      output-dir: ./apps/distgo/dist
      dist-type:
        type: os-arch-bin
  gonform:
    build:
      output-dir: ./apps/gonform/build
      main-pkg: ./apps/gonform/main/gonform
      environment:
        CGO_ENABLED: "0"
      version-var: github.com/palantir/godel/cmd/godel.Version
    dist:
      output-dir: ./apps/gonform/dist
      dist-type:
        type: os-arch-bin
  gunit:
    build:
      output-dir: ./apps/gunit/build
      main-pkg: ./apps/gunit/main/gunit
      environment:
        CGO_ENABLED: "0"
      version-var: github.com/palantir/godel/cmd/godel.Version
    dist:
      output-dir: ./apps/gunit/dist
      dist-type:
        type: os-arch-bin
  okgo:
    build:
      output-dir: ./apps/okgo/build
      main-pkg: ./apps/okgo/main/okgo
      environment:
        CGO_ENABLED: "0"
      version-var: github.com/palantir/godel/cmd/godel.Version
    dist:
      output-dir: ./apps/okgo/dist
      dist-type:
        type: os-arch-bin
  godel:
    build:
      main-pkg: ./.
      environment:
        CGO_ENABLED: "0"
      os-archs:
        - os: darwin
          arch: amd64
        - os: linux
          arch: amd64
      version-var: github.com/palantir/godel/framework/godel.Version
    dist:
      dist-type:
        type: bin
        info:
          omit-init-sh: true
      script: |
              set -euo pipefail

              # computes the SHA-256 hash of the provided file. Uses openssl, shasum or sha1sum program.
              function compute_sha256 {
                  local file=$1
                  if command -v openssl >/dev/null 2>&1; then
                      # print SHA-256 hash using openssl
                      openssl dgst -sha256 "$file" | sed -E 's/SHA256\(.*\)= //'
                  elif command -v shasum >/dev/null 2>&1; then
                      # Darwin systems ship with "shasum" utility
                      shasum -a 256 "$file" | sed -E 's/[[:space:]]+.+//'
                  elif command -v sha256sum >/dev/null 2>&1; then
                      # Most Linux systems ship with sha256sum utility
                      sha256sum "$file" | sed -E 's/[[:space:]]+.+//'
                  else
                      echo "Could not find program to calculate SHA-256 checksum for file"
                      exit 1
                  fi
              }

              # replaces all occurrences of the string "{{VERSION}}" in the provided file with the value of $VERSION
              function substitute_version {
                  local file=$1
                  substitute_variable "{{VERSION}}" "$VERSION" "$file"
              }

              # replaces all occurrences of the string "{{CHECKSUM_$1}}" in the provided file with the value computed
              # for the checksum of the binary for the OS/Arch combination specified by $1.
              function substitute_checksum {
                  local os_arch=$1
                  local file=$2
                  local checksum=$(compute_sha256 "$DIST_DIR/bin/$os_arch/godel")
                  substitute_variable "{{CHECKSUM_$os_arch}}" "$checksum" "$file"
              }

              # replaces all occurrences of the first argument with the value of the second argument in the file
              # provided as the third argument.
              function substitute_variable {
                  local variable=$1
                  local value=$2
                  local file=$3

                  local tmpFile=$file-$RANDOM.tmp
                  cp -p $file $tmpFile
                  sed 's|'"$variable"'|'"$value"'|' "$file" > "$tmpFile"
                  mv "$tmpFile" "$file"
              }

              function setup_wrapper {
                  local wrapper_dir=$1

                  # copy contents of resources directory
                  mkdir -p "$wrapper_dir"
                  cp -r "$PROJECT_DIR/resources/wrapper"/* "$wrapper_dir"

                  # substitute version for godelw
                  substitute_version "$wrapper_dir/godelw"

                  # substitute checksums for godelw
                  substitute_checksum darwin-amd64 "$wrapper_dir/godelw"
                  substitute_checksum linux-amd64 "$wrapper_dir/godelw"

                  # substitute the URL in the properties file
                  REPO=""
                  if [ "$IS_SNAPSHOT" == "1" ]; then
                      REPO="releases-internal"
                  else
                      REPO="releases"
                  fi
                  PROPERTIES_FILE="$wrapper_dir/godel/config/godel.properties"
                  URL="https://palantir.bintray.com/${REPO}/com/palantir/godel/godel/${VERSION}/godel-${VERSION}.tgz"
                  substitute_variable "{{URL}}" "$URL" "$PROPERTIES_FILE"
              }

              # copy contents of resources directory
              mkdir -p "$DIST_DIR/wrapper"
              setup_wrapper "$DIST_DIR/wrapper"
group-id: com.palantir.godel
