version: 2.1

orbs:
  go: palantir/go@0.0.30
  godel: palantir/godel@0.0.30

homepath: &homepath
  homepath: /home/circleci

gopath: &gopath
  gopath: /home/circleci/go

executors:
  alpine-go:
    parameters:
      version:
        type: string
      working_directory:
        type: string
        default: /go/src/github.com/palantir/godel
    docker:
      - image: golang:<< parameters.version >>-alpine
    working_directory: << parameters.working_directory >>
  circleci-go:
    parameters:
      working_directory:
        type: string
        default: /home/circleci/go/src/github.com/palantir/godel
    docker:
      - image: cimg/go:1.16-browsers
    working_directory: << parameters.working_directory >>

jobs:
  wiki:
    executor: circleci-go
    steps:
      - checkout
      - godel/setup
      - run: ./godelw github-wiki --docs-dir docs --repository=git@github.com:palantir/godel.wiki.git
  godel-alpine-integration:
    parameters:
      executor:
        type: executor
      tags:
        description: |
          The tags for the tests
        type: string
        default: ""
      parallelism:
        description: |
          If specified, adds the "-p" flag with the specified value for parallelism
        type: string
        default: ""
    executor: << parameters.executor >>
    steps:
      - checkout
      - run: go version
      - run: mkdir -p "/tmp/test-results"
      - run: ./godelw test<<# parameters.tags >> --tags=<< parameters.tags >><</ parameters.tags >> --junit-output="$TESTS_DIR/$CIRCLE_PROJECT_REPONAME-tests.xml"<<# parameters.parallelism >> -- -p=<< parameters.parallelism >><</ parameters.parallelism >>
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

all-tags-filter: &all-tags-filter
  filters:
    tags:
      only: /.*/

requires_products: &requires_products
  - verify
  - test
  - integration-std
  - integration-alpine-go-curr
  - integration-alpine-go-prev
  - dist
  - pkg-products-verify-test

workflows:
  version: 2
  verify-test-dist:
    jobs:
      - godel/verify:
          name: verify
          executor: circleci-go
          <<: *homepath
          <<: *gopath
          <<: *all-tags-filter
          parallel: false
      - godel/test:
          name: test
          tags: none
          executor: circleci-go
          <<: *homepath
          <<: *gopath
          <<: *all-tags-filter
      - godel/test:
          name: integration-std
          tags: integration
          executor: circleci-go
          <<: *homepath
          <<: *gopath
          <<: *all-tags-filter
      - godel-alpine-integration:
          name: integration-alpine-go-curr
          tags: integration
          executor:
            name: alpine-go
            version: 1.17.3
          working_directory: /go/src/github.com/palantir/godel
          <<: *all-tags-filter
      - godel-alpine-integration:
          name: integration-alpine-go-prev
          tags: integration
          executor:
            name: alpine-go
            version: 1.16.10
          working_directory: /go/src/github.com/palantir/godel
          <<: *all-tags-filter
      - godel/verify:
          name: pkg-products-verify-test
          checkout-path: /home/circleci/go/src/github.com/palantir/godel/pkg/products/v2
          include-tests: true
          executor:
            name: circleci-go
            working_directory: /home/circleci/go/src/github.com/palantir/godel/pkg/products/v2
          <<: *homepath
          <<: *gopath
          <<: *all-tags-filter
      - godel/dist:
          name: dist
          executor: circleci-go
          <<: *homepath
          <<: *gopath
          <<: *all-tags-filter
      - wiki:
          requires: *requires_products
          filters:
            branches:
              only: /^master$/
