### Docker images ###
alpine-go-curr: &alpine-go-curr
  working_directory: /go/src/github.com/palantir/godel
  docker:
    - image: nmiyake/go:alpine-go-1.9.2-t125

alpine-go-prev: &alpine-go-prev
  working_directory: /go/src/github.com/palantir/godel
  docker:
    - image: nmiyake/go:alpine-go-1.8.3-t125

brew-go: &brew-go
  working_directory: /go/src/github.com/palantir/godel
  docker:
    - image: nmiyake/go:brew-go-t125

darwin-linux: &darwin-linux
  working_directory: /go/src/github.com/palantir/godel
  docker:
    - image: nmiyake/go:go-darwin-linux-1.9.2-t125

darwin-linux-no-cgo: &darwin-linux-no-cgo
  working_directory: /go/src/github.com/palantir/godel
  docker:
    - image: nmiyake/go:go-darwin-linux-no-cgo-1.9.2-t125
      environment:
        CGO_ENABLED: 0

darwin-linux-rpm-fpm: &darwin-linux-rpm-fpm
  working_directory: /go/src/github.com/palantir/godel
  docker:
    - image: nmiyake/go:go-darwin-linux-no-cgo-1.9.2-docker-17.03.0-ce-rpm-fpm-t125

### Shared cache steps ###
godel-gouser-cache-restore: &godel-gouser-cache-restore
  restore_cache:
    keys:
      - godel-gouser-cache-{{ checksum "godelw" }}-{{ checksum "godel/config/godel.yml" }}-v1
godel-gouser-cache-save: &godel-gouser-cache-save
  save_cache:
    key: godel-gouser-cache-{{ checksum "godelw" }}-{{ checksum "godel/config/godel.yml" }}-v1
    paths:
      - /home/gouser/.godel

godel-linuxbrew-cache-restore: &godel-linuxbrew-cache-restore
  restore_cache:
    keys:
      - godel-linuxbrew-cache-{{ checksum "godelw" }}-{{ checksum "godel/config/godel.yml" }}-v1
godel-linuxbrew-cache-save: &godel-linuxbrew-cache-save
  save_cache:
    key: godel-linuxbrew-cache-{{ checksum "godelw" }}-{{ checksum "godel/config/godel.yml" }}-v1
    paths:
      - /home/linuxbrew/.godel

godel-root-cache-restore: &godel-root-cache-restore
  restore_cache:
    keys:
      - godel-root-cache-{{ checksum "godelw" }}-{{ checksum "godel/config/godel.yml" }}-v1
godel-root-cache-save: &godel-root-cache-save
  save_cache:
    key: godel-root-cache-{{ checksum "godelw" }}-{{ checksum "godel/config/godel.yml" }}-v1
    paths:
      - ~/.godel

### Shared test steps ###
define-tests-dir: &define-tests-dir
  run: echo "export TESTS_DIR=/tmp/test-results/${CIRCLE_PROJECT_REPONAME}-${TAG_NAME}-tests" >> $BASH_ENV

mkdir-tests-dir: &mkdir-tests-dir
  run: mkdir -p "${TESTS_DIR}"

run-tests: &run-tests
  run: ./godelw test --tags="$TAG_NAME" --junit-output="$TESTS_DIR/tests.xml"

store-test-results: &store-test-results
  type: test-results-store
  path: /tmp/test-results

### Other shared steps ###
go-install-packages: &go-install-packages
  run: go install $(./godelw packages)

go-version: &go-version
  run: go version

godel-version: &godel-version
  run: ./godelw version

godel-dist-product: &godel-dist-product
  run: ./godelw dist "$PRODUCT_NAME"

store-artifacts: &store-artifacts
  type: artifacts-store
  path: /tmp/test-results
  destination: test-results

test_steps: &test_steps
  - setup_remote_docker
  - checkout
  - *go-version
  - *godel-root-cache-restore
  - *godel-version
  - *godel-root-cache-save
  - *go-install-packages
  - *define-tests-dir
  - *mkdir-tests-dir
  - *godel-dist-product
  - run: go install ./vendor/github.com/palantir/amalgomate
  - *run-tests
  - *store-test-results
  - *store-artifacts

### Jobs ###
version: 2
jobs:
  ### Verify ###
  verify:
    <<: *darwin-linux-no-cgo
    steps:
      - checkout
      - *go-version
      - *godel-root-cache-restore
      - *godel-version
      - *godel-root-cache-save
      - *go-install-packages
      - run: ./godelw verify --apply=false --skip-test

  ### Base tests ###
  distgo:
    <<: *darwin-linux-rpm-fpm
    environment:
      PRODUCT_NAME: distgo
      TAG_NAME: distgo
    # define custom steps because image runs with non-root user
    steps:
      - setup_remote_docker
      - checkout
      - *go-version
      - *godel-gouser-cache-restore
      - *godel-version
      - *godel-gouser-cache-save
      - *define-tests-dir
      - *mkdir-tests-dir
      - *godel-dist-product
      - *run-tests
      - *store-test-results
      - *store-artifacts

  godel:
    <<: *darwin-linux-no-cgo
    environment:
      PRODUCT_NAME: godel
      TAG_NAME: none
    steps: *test_steps

  gonform:
      <<: *darwin-linux-no-cgo
      environment:
        PRODUCT_NAME: gonform
        TAG_NAME: gonform
      steps: *test_steps

  gunit:
    <<: *darwin-linux
    environment:
      PRODUCT_NAME: gunit
      TAG_NAME: gunit
    steps: *test_steps

  okgo:
    <<: *darwin-linux-no-cgo
    environment:
      PRODUCT_NAME: okgo
      TAG_NAME: okgo
    steps: *test_steps

  ### Integration tests ###
  integration-alpine-go-curr:
    <<: *alpine-go-curr
    environment:
      PRODUCT_NAME: godel
      TAG_NAME: integration
      CGO_ENABLED: 0
    steps: *test_steps

  integration-alpine-go-prev:
    <<: *alpine-go-prev
    environment:
      PRODUCT_NAME: godel
      TAG_NAME: integration
      CGO_ENABLED: 0
    steps: *test_steps

  integration-brew:
    <<: *brew-go
    environment:
      PRODUCT_NAME: godel
      TAG_NAME: integration
    # define custom steps because image runs with non-root user
    steps:
      - checkout
      - *go-version
      - *godel-linuxbrew-cache-restore
      - *godel-version
      - *godel-linuxbrew-cache-save
      - *go-install-packages
      - *define-tests-dir
      - *mkdir-tests-dir
      - *godel-dist-product
      - *run-tests
      - *store-test-results
      - *store-artifacts

  integration-std:
    <<: *darwin-linux-no-cgo
    environment:
      PRODUCT_NAME: godel
      TAG_NAME: integration
    steps: *test_steps

  ### Docs ###
  wiki:
    <<: *darwin-linux-no-cgo
    steps:
      - checkout
      - *go-version
      - *godel-root-cache-restore
      - *godel-version
      - *godel-root-cache-save
      - run: ./godelw github-wiki --docs-dir docs --repository=git@github.com:palantir/godel.wiki.git

  ### Dist/Publish ###
  dist:
    <<: *darwin-linux-no-cgo
    steps:
      - checkout
      - *go-version
      - *godel-root-cache-restore
      - *godel-version
      - *godel-root-cache-save
      - run: ./godelw dist
      - save_cache:
          key: dist-{{ .Environment.CIRCLE_SHA1 }}-v1
          paths:
            - dist
  publish:
    <<: *darwin-linux-no-cgo
    steps:
      - checkout
      - *go-version
      - *godel-root-cache-restore
      - *godel-version
      - *godel-root-cache-save
      - restore_cache:
          keys:
            - dist-{{ .Environment.CIRCLE_SHA1 }}-v1
      - run: ./godelw publish bintray --url https://api.bintray.com --subject palantir --repository releases --user "$BINTRAY_USER" --password "$BINTRAY_PASSWORD" --publish --downloads-list godel

### Workflows ###
requires_products: &requires_products
  - verify
  - dist
  - distgo
  - godel
  - gonform
  - gunit
  - integration-alpine-go-curr
  - integration-alpine-go-prev
  - integration-brew
  - integration-std
  - okgo

all-tags-filter: &all-tags-filter
  filters:
    tags:
      only: /.*/

workflows:
  version: 2
  build-publish:
    jobs:
      - verify:
          <<: *all-tags-filter
      - dist:
          <<: *all-tags-filter
      - distgo:
          <<: *all-tags-filter
      - godel:
          <<: *all-tags-filter
      - gonform:
          <<: *all-tags-filter
      - gunit:
          <<: *all-tags-filter
      - integration-alpine-go-curr:
          <<: *all-tags-filter
      - integration-alpine-go-prev:
          <<: *all-tags-filter
      - integration-brew:
          <<: *all-tags-filter
      - integration-std:
          <<: *all-tags-filter
      - okgo:
          <<: *all-tags-filter
      - wiki:
          requires: *requires_products
          filters:
            branches:
              only: /^master$/
      - publish:
          requires: *requires_products
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)+(-rc[0-9]+)?(-alpha[0-9]+)?$/
            branches:
              ignore: /.*/
