version: 2
executorType: docker
containerInfo:
  - image: nmiyake/go:go-1.7.6-1.8.3-t39
    cmd: ["/bin/bash"]
stages:
  build:
    parallel: 2
    workDir: /go/src/github.com/nmiyake/pkg
    environment:
      - PROJECT: pkg
      - GET_GO_VERSION: |
            case $CIRCLE_NODE_INDEX in
            0)
                echo "1.8"
                ;;
            1)
                echo "1.7"
                ;;
            *)
                echo "Unexpected node $CIRCLE_NODE_INDEX"
                ;;
            esac
    steps:
      - type: checkout
      - type: cache-restore
        key: godel-{{ checksum "godelw" }}
      - type: shell
        name: "Verify godel version"
        command: ./godelw version
      - type: cache-save
        key: godel-{{ checksum "godelw" }}
        paths:
          - /root/.godel
      - type: shell
        name: "Set up /usr/local/go"
        command: |
          set -eu
          rm /usr/local/go
          ln -s "/usr/local/go-$(eval "$GET_GO_VERSION")" /usr/local/go
      - type: shell
        name: "Verify Go version"
        command: go version
      - type: shell
        name: "Install packages"
        command: go install $(./godelw packages)
      - type: shell
        name: "Create test output directory"
        command: mkdir -p "/tmp/test-results/$PROJECT-$(eval "$GET_GO_VERSION")"
      - type: shell
        name: "Run godel verification"
        command: ./godelw verify --apply=false --junit-output="/tmp/test-results/$PROJECT-$(eval "$GET_GO_VERSION")/$PROJECT-$(eval "$GET_GO_VERSION")-tests.xml"
      - type: test-results-store
        path: /tmp/test-results
      - type: artifacts-store
        path: /tmp/test-results
        destination: test-results
